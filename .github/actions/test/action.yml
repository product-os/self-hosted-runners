# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
name: Tests
description: "Run a suite of tests on the draft runner to ensure it is ready for production"
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true
runs:
  using: "composite"

  # Add as many tests as we think necessary to establish
  # whether the runner image is ready for production CI runs.
  steps:
    - name: Check environment
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        date
        id
        printenv

    - name: Check secrets
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run : |
        ! printenv | grep -q ACTIONS_RUNNER_AUTH_TOKEN=
        ! printenv | grep -q ACTIONS_RUNNER_APP_KEY_B64=
        ! printenv | grep -q GH_TOKEN=
        ! printenv | grep -q GITHUB_TOKEN=

    - name: Check system
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        cat /etc/os-release
        uname -a
        dpkg --print-architecture
        free -h
        df -h
        findmnt
        lsblk

    - name: Check devices
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        ls -al /dev/

        echo "Testing stdout" >&1
        echo "Testing stderr" >&2
        echo "Testing stdout" >/dev/stdout
        echo "Testing stderr" >/dev/stderr

        echo "Testing stdout" 1> >(tee "$HOME"/stdout)
        echo "Testing stderr" 2> >(tee "$HOME"/stderr)

        script -q -e -c "echo 'Testing pseudo-terminal'"

        echo GITHUB_ENV=$GITHUB_ENV
        echo "test=GITHUB_ENV" | tee -a $GITHUB_ENV

        echo GITHUB_OUTPUT=$GITHUB_OUTPUT
        echo "test=GITHUB_OUTPUT" | tee -a $GITHUB_OUTPUT

        echo GITHUB_STEP_SUMMARY=$GITHUB_STEP_SUMMARY
        echo "Testing GITHUB_STEP_SUMMARY" | tee -a $GITHUB_STEP_SUMMARY

    - name: Check networking
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        hostname
        cat /etc/hosts
        test -z "$(sudo hostname 2>&1 | grep "unable to resolve host")" || exit 1

        ip addr
        ip link list
        ip route

        npm ping

        curl -fsSL https://raw.githubusercontent.com/dylanaraps/neofetch/7.1.0/neofetch | bash

    - name: Check docker
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        docker info
        docker run hello-world

    - name: Test compose
      shell: bash --noprofile --norc -eo pipefail -x {0}
      working-directory: tests/compose
      run: |
        docker compose -f docker-compose.a.yml -f docker-compose.b.yml config > docker-compose.yml
        yq '.' docker-compose.yml
        docker compose run test

    - name: Setup buildx
      id: setup_buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      env:
        # renovate: datasource=github-releases depName=docker/buildx
        BUILDX_VERSION: v0.21.1
      with:
        driver-opts: network=host
        install: true
        version: ${{ env.BUILDX_VERSION }}

    - name: Check packages
      shell: bash --noprofile --norc -eo pipefail -x {0}
      run: |
        aws --version
        balena version
        containerd --version
        ctr --version
        docker version
        docker buildx version
        docker compose version
        gh version
        node --version
        npm --version
        python3 --version
        pwsh -Version
        runc --version
        s6-rc help
        socat -V
        yq --version
        zstd --version
