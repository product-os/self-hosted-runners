#!/usr/bin/env bash

# The main goal of this init script is to set up the filesystem
# in a way that changes are not persisted across container restarts.

# This is done by creating an overlayfs mount with the current root
# as the lower layer, and a temporary directory as the upper layer.
# Then, the chroot environment is executed with the overlayfs mount
# as the root directory.

set -e

# shellcheck disable=SC1091
. /etc/s6-overlay/scripts/functions

truthy "${DISABLE:-}" && exit 0

truthy "${VERBOSE:-}" && set -x

# These tmpfs mounts need the executable bit set
mount -v -o remount,rw,exec tmpfs /tmp
mount -v -o remount,rw,exec tmpfs /run

# Ensure the rootfs directory is empty.
# This directory must be an ext4 or tmpfs volume, and not overlayfs.
rm -rf /rootfs/*

# Create directories for overlay structure
mkdir -vp /rootfs/lower    # mount point for ro base layer
mkdir -vp /rootfs/upper    # rw layer
mkdir -vp /rootfs/work     # required by overlayfs
mkdir -vp /rootfs/merged   # the final merged view

# Bind mount the current root as the lower (ro) layer
mount -v --rbind / /rootfs/lower
mount -v -o remount,ro,bind /rootfs/lower

# Set up the overlay mount
mount -v -t overlay overlay \
    -o lowerdir=/rootfs/lower,upperdir=/rootfs/upper,workdir=/rootfs/work \
    /rootfs/merged

# Get the root mount ID
root_id="$(awk '$5 == "/" {print $1}' /proc/self/mountinfo)"

# Get all mounts whose parent ID matches root_id
mounts="$(awk -v root="${root_id}" '$2 == root { print $5 }' /proc/self/mountinfo)"

# Iterate over the mounts and recursively bind them to the merged rootfs
for target in ${mounts}; do

    # Skip the rootfs mounts
    [[ "${target}" =~ ^/rootfs ]] && continue

    mount -v --rbind "${target}" "/rootfs/merged${target}"
done

# Print the new mounts for debugging
findmnt --types ext4,tmpfs,devtmpfs,proc,sysfs,shm --uniq

# Assert these docker files are mounted in the chroot
diff /etc/resolv.conf /rootfs/merged/etc/resolv.conf
diff /etc/hosts /rootfs/merged/etc/hosts
diff /etc/hostname /rootfs/merged/etc/hostname

ACTIONS_RUNNER_RUNTIME_LABELS="$(get_runtime_labels)"
export ACTIONS_RUNNER_RUNTIME_LABELS

# Execute the s6-overlay entrypoint
exec chroot /rootfs/merged /init
