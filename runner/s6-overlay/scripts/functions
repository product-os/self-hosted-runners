#!/usr/bin/env bash
# shellcheck disable=SC2312

# Exit if script is executed, not sourced
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    echo "This script must be sourced, not executed."
    exit 1
fi

curl_with_opts() {
    curl --fail --silent --retry 3 --connect-timeout 3 "$@"
}

truthy() {
    [[ ${1,,} =~ true|yes|on|1 ]]
}

get_geo() {
    # shellcheck disable=SC2310
    if curl_with_opts -I https://ipinfo.io >/dev/null 2>&1; then
        geoip_api_url=https://ipinfo.io
        if [[ -n ${GEOIP_API_TOKEN:-} ]]; then
            geoip_api_url="${geoip_api_url}?token=${GEOIP_API_TOKEN}"
        fi
        curl_with_opts "${geoip_api_url}"
    fi
}

round_up_to_power_of_two() {
    local value=$1
    awk -v v="${value}" 'BEGIN {
        p=int(log(v)/log(2));
        if (2^p < v) p++;
        print 2^p
    }'
}

# Autmatically detect and add labels based on the environment
get_runtime_labels() {
    local _labels=()

    _labels+=("machine:$(uname -m)")
    _labels+=("arch:$(dpkg --print-architecture)")

    if command lsb_release; then
        _labels+=("family:$(lsb_release --id --short)")
        _labels+=("id:$(lsb_release --id --short)")
        _labels+=("distro:$(lsb_release --codename --short)")
        _labels+=("codename:$(lsb_release --codename --short)")
        _labels+=("release:$(lsb_release --release --short)")
    fi

    ipinfo="$(get_geo)"
    if [[ -n "${ipinfo}" ]]; then
        _labels+=("country:$(echo "${ipinfo}" | jq -r .country | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
        _labels+=("region:$(echo "${ipinfo}" | jq -r .region | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
        _labels+=("city:$(echo "${ipinfo}" | jq -r .city | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
    fi

    memgib="$(get_rounded_mem_gib)"
    if [[ -n "${memgib}" ]]; then
        _labels+=("${memgib}gib")
        _labels+=("mem:${memgib}Gi")
    fi

    numcpu="$(nproc)"
    if [[ -n "${numcpu}" ]]; then
        _labels+=("${numcpu}cpu")
        _labels+=("cpu:${numcpu}")
    fi

    if kvm-ok >/dev/null; then
        _labels+=("kvm")
    fi

    if [[ -f /sys/devices/virtual/dmi/id/board_name ]]; then
        _labels+=("board:$(</sys/devices/virtual/dmi/id/board_name)")
    fi

    printf '%s ' "${_labels[@]}"
}
