#!/usr/bin/env bash
# shellcheck disable=SC1091,SC2310

set -euo pipefail

. /etc/s6-overlay/scripts/functions

truthy "${VERBOSE:-}" && set -x

if [[ -f /home/runner/.runner ]]; then
    echo "Runner is already registered, exiting..."
    exit 0
fi

token_file="/run/runner.token"

if [[ ! -f "${token_file}" ]]; then
    echo "Token file not found, calling get-token script..."
    /etc/s6-overlay/scripts/get-token "${token_file}"
fi

rm -f /home/runner/.runner
rm -f /home/runner/.credentials
rm -f /home/runner/.credentials_rsaparams

runner_tags=()

runner_tags+=("machine:$(uname -m)")
runner_tags+=("arch:$(dpkg --print-architecture)")

if lsb_release; then
    runner_tags+=("family:$(lsb_release --id --short)")
    runner_tags+=("id:$(lsb_release --id --short)")
    runner_tags+=("distro:$(lsb_release --codename --short)")
    runner_tags+=("codename:$(lsb_release --codename --short)")
    runner_tags+=("release:$(lsb_release --release --short)")
fi

ipinfo="$(get_geo)" || true
if [[ -n "${ipinfo}" ]]; then
    runner_tags+=("country:$(echo "${ipinfo}" | jq -r .country | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
    runner_tags+=("region:$(echo "${ipinfo}" | jq -r .region | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
    runner_tags+=("city:$(echo "${ipinfo}" | jq -r .city | tr ' ' '_' | tr '[:upper:]' '[:lower:]')")
fi

numgib="$(free -g | awk '/^Mem:/ {print $2}')"
numgib="$(round_up_to_power_of_two "${numgib}")"
if [[ -n "${numgib}" ]]; then
    runner_tags+=("${numgib}gib")
    runner_tags+=("mem:${numgib}Gi")
fi

numcpu="$(nproc)"
if [[ -n "${numcpu}" ]]; then
    runner_tags+=("${numcpu}cpu")
    runner_tags+=("cpu:${numcpu}")
fi

if kvm-ok; then
    runner_tags+=("kvm")
fi

if [[ -f /sys/devices/virtual/dmi/id/board_name ]]; then
    runner_tags+=("board:$(</sys/devices/virtual/dmi/id/board_name)")
fi

# comma-separated list of tags to add to the runner
if [[ -n "${ACTIONS_RUNNER_BUILD_TAGS:-}" ]]; then
    # split the string into an array
    IFS=',' read -r -a build_tags <<<"${ACTIONS_RUNNER_BUILD_TAGS}"
fi

# comma-separated list of tags to add to the runner
if [[ -n "${ACTIONS_RUNNER_EXTRA_TAGS:-}" ]]; then
    # split the string into an array
    IFS=',' read -r -a extra_tags <<<"${ACTIONS_RUNNER_EXTRA_TAGS}"
fi

# comma-separated list of tags to remove from the runner
if [[ -n "${ACTIONS_RUNNER_REMOVE_TAGS:-}" ]]; then
    # split the string into an array
    IFS=',' read -r -a remove_tags <<<"${ACTIONS_RUNNER_REMOVE_TAGS}"
fi

# add the build tags to the runner tags
runner_tags+=("${build_tags[@]}")
# add the extra tags to the runner tags
runner_tags+=("${extra_tags[@]}")
# remove the remove tags from the runner tags
runner_tags=("${runner_tags[@]/${remove_tags[@]}/}")

# Join the array elements with commas
runner_tags_str=$(printf "%s," "${runner_tags[@]}")
# Remove the trailing comma
runner_tags_str=${runner_tags_str%,}

if [[ ! "${ACTIONS_RUNNER_REGISTRATION_SLUG:-}" =~ ^(repos|orgs|enterprises)\/.*$ ]]; then
    echo "ACTIONS_RUNNER_REGISTRATION_SLUG must be in the format repos/OWNER/REPO or orgs/ORG or enterprises/ENTERPRISE"
    exit 1
fi

# remove orgs/ and repos/ from the slug to get the registration URL
registration_slug=${ACTIONS_RUNNER_REGISTRATION_SLUG}
registration_slug="${registration_slug/orgs\//}"
registration_slug="${registration_slug/repos\//}"
registration_url="https://github.com/${registration_slug}"

runner_name=${ACTIONS_RUNNER_NAME:-$(uuidgen)}
work_directory=${ACTIONS_RUNNER_WORK_DIRECTORY:-"/home/runner/_work"}

# https://github.com/actions/runner/blob/main/src/Runner.Listener/Runner.cs
config_args=()
config_args+=("--disableupdate")
config_args+=("--unattended")
config_args+=("--name" "${runner_name}")
config_args+=("--work" "${work_directory}")
config_args+=("--labels" "\"${runner_tags_str}\"")

config_args+=("--url" "${registration_url}")
config_args+=("--token" "$(<"${token_file}")")

[[ -n "${ACTIONS_RUNNER_GROUP:-}" ]] && config_args+=("--runnergroup" "${ACTIONS_RUNNER_GROUP}")

truthy "${ACTIONS_RUNNER_EPHEMERAL:-true}" && config_args+=("--ephemeral")
truthy "${ACTIONS_RUNNER_REPLACE:-}" && config_args+=("--replace")
truthy "${ACTIONS_RUNNER_NO_DEFAULT_LABELS:-}" && config_args+=("--no-default-labels")

# create and chown the work directory
mkdir -p "${work_directory}"
chown -R "runner:runner" "${work_directory}"

# chown the current directory since files will be written by the runner process
chown -R "runner:runner" /home/runner/

# configure as runner user
su - runner -c "/home/runner/config.sh ${config_args[*]}" 2>&1

rm -f "${token_file}"
