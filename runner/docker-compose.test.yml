---
version: "2.4"

services:
  sut:
    image: sut
    build:
      context: .
    privileged: true
    userns_mode: host
    cap_add:
      - ALL
    # https://github.com/product-os/self-hosted-runners/settings/secrets/actions/COMPOSE_VARS
    # COMPOSE_VARS=$(cat .env | openssl base64 -A)
    env_file:
      # (required) GH_TOKEN with appropriate scope(s)
      # (optional) GEOIP_API_TOKEN (https://ipinfo.io/login)
      - .env
    environment:
      # test at the org. level
      GITHUB_ORG: product-os
      ACTIONS_RUNNER_GROUP: Default
      ACTIONS_RUNNER_EPHEMERAL: "true"
      VERBOSE: "true"
      EXTRA_DOCKERD_ARGS: "--iptables=false"
    tmpfs:
      - /tmp
      - /run:exec
      - /home/github/_work:exec
      - /scratch
    command:
      - /bin/bash
      - -c
      - |
        set -axeo pipefail

        # wait for DinD
        count=0
        while ! docker info; do
          if [ "$${count}" -gt 10 ]; then
            echo "DinD failed to start"
            exit 1
          fi
          count=$$((count + 1))
          sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        if readlink -f /proc/1/exe | grep -q qemu; then
          echo "Skipping runner tests for emulated environments..."
          exit 0
        fi

        /start-runner.sh &

        # wait for runner
        count=0
        while ! pgrep Runner.Listener; do
          if [ "$${count}" -gt 10 ]; then
            echo "Runner failed to start"
            exit 1
          fi
          count=$$((count + 1))
          sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        strings /proc/$$(pgrep Runner.Listener)/environ | grep HOME=/home/github

        # check runner registration
        count=0
        while ! test -f .runner; do
          if [ "$${count}" -gt 10 ]; then
            echo "Runner failed to register"
            exit 1
          fi
          count=$$((count + 1))
          sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        agentId="$(jq -r '.agentId' .runner)"
        slug=orgs
        if [[ -n "$${GITHUB_ENTERPRISE}" ]]; then
          GITHUB_ORG="$${GITHUB_ENTERPRISE}"
          slug=enterprises
        fi

        # wait for runner to be online
        count=0
        while ! curl -fsSL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $${GH_TOKEN:-$${GITHUB_TOKEN}}" \
          https://api.github.com/$${slug}/$${GITHUB_ORG}/actions/runners/$${agentId} | jq -r 'select(.status == "online") | .status'; do
            if [ "$${count}" -gt 10 ]; then
              echo "Runner failed to come online"
              exit 1
            fi
            count=$$((count + 1))
            sleep "$$(( ( RANDOM % 10 ) + 5 ))s"
        done

        response="$$(curl -fsSL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $${GH_TOKEN:-$${GITHUB_TOKEN}}" \
          https://api.github.com/$${slug}/$${GITHUB_ORG}/actions/runners/$${agentId})"
          
        # check that our custom labels have been applied
        test $$(echo $$response | jq '.labels | length') -gt 15
