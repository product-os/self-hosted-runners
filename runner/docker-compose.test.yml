---
version: "2.4"

services:
  sut:
    image: sut
    build:
      context: .
    privileged: true
    userns_mode: host
    cap_add:
      - ALL
    # https://github.com/product-os/self-hosted-runners/settings/secrets/actions/COMPOSE_VARS
    # COMPOSE_VARS=$(cat .env | openssl base64 -A)
    env_file:
      # (required) GH_TOKEN with appropriate scope(s)
      # (optional) GEOIP_API_TOKEN (https://ipinfo.io/login)
      - .env
    environment:
      # test at the org. level
      GITHUB_ORG: product-os
      ACTIONS_RUNNER_GROUP: Default
      ACTIONS_RUNNER_EPHEMERAL: "true"
      VERBOSE: "true"
    tmpfs:
      - /tmp
      - /var/run
      - /home/github/_work
      - /scratch
      - /balena
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
    entrypoint:
      - /bin/bash
      - "-c"
    command:
      - |
        set -axe

        # background entrypoint
        ./balena.sh &

        # wait for DinD
        while ! docker info; do
            sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        # check if we are virtualized
        cont_arch="$$(docker info | grep Architecture:)"
        host_arch="$$(sudo DOCKER_HOST=unix:///host/var/run/docker.sock docker info | grep Architecture:)"
        if [ "$${cont_arch}" != "$${host_arch}" ]
        then
            echo "Container architecture ($${cont_arch}) does not match host architecture ($${host_arch})"
            echo "Skipping runner tests for emulated environments..."
            exit 0
        fi

        # wait for runner
        while ! pgrep Runner.Listener; do
            sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        # check runner registration
        while ! test -f .runner; do
            sleep "$$(( ( RANDOM % 3 ) + 3 ))s"
        done

        agentId="$(jq -r '.agentId' .runner)"
        slug=orgs
        if [[ -n "$${GITHUB_ENTERPRISE}" ]]; then
            GITHUB_ORG="$${GITHUB_ENTERPRISE}"
            slug=enterprises
        fi
        # wait for runner to be online
        while ! curl -fsSL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $${GH_TOKEN:-$${GITHUB_TOKEN}}" \
          https://api.github.com/$${slug}/$${GITHUB_ORG}/actions/runners/$${agentId} | jq -r 'select(.status == "online") | .status'; do
              sleep "$$(( ( RANDOM % 10 ) + 5 ))s"
        done
