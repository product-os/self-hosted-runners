version: "2.4"

services:
  runner:
    image: sut
    # https://github.com/product-os/self-hosted-runners/settings/secrets/actions/COMPOSE_VARS
    # COMPOSE_VARS=$(cat .env | openssl base64 -A)
    env_file:
      # (optional) ACTIONS_RUNNER_APP_KEY_B64 for github app with read and write access to organization self hosted runners
      # (optional) ACTIONS_RUNNER_APP_ID for github app with read and write access to organization self hosted runners
      # (optional) ACTIONS_RUNNER_INSTALLATION_ID for github app with read and write access to organization self hosted runners
      # (optional) ACTIONS_RUNNER_AUTH_TOKEN with appropriate scope(s)
      # (optional) GEOIP_API_TOKEN (https://ipinfo.io/login)
      - .env
    environment:
      # test at the org. level
      GITHUB_ORG: product-os
      ACTIONS_RUNNER_GROUP: Default
      ACTIONS_RUNNER_EPHEMERAL: "true"
      VERBOSE: "true"
      ACTIONS_RUNNER_MACHINE_NAME: sut
      ACTIONS_RUNNER_EXTRA_TAGS: sut
      S6_CMD_WAIT_FOR_SERVICES_MAXTIME: 50000

  sut:
    image: alpine:3.18
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME:-self-hosted-runners}
      COMPOSE_FILE: docker-compose.yml:docker-compose.test.yml
    depends_on:
      - runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/usr/src/app:ro
    working_dir: /usr/src/app
    command:
      - /bin/sh
      - -c
      - |
        set -ex
        apk add --no-cache docker-cli-compose

        count=0
        while true; do

          if [ $$count -gt 20 ]; then
            echo "Timed out waiting for runner to come online"
            exit 1
          fi

          count=$$(($$count + 1))

          sleep 3
          
          docker compose logs --no-color runner | grep "Daemon has completed initialization" || continue
          docker compose logs --no-color runner | grep "Listening for Jobs" || continue

          echo "Waiting for runnner to come online..."

          break

        done
