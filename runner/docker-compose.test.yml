---
version: "2.4"

volumes:
  persistent-volume: {}

services:
  sut:
    image: sut
    build:
      context: .
    privileged: true
    userns_mode: host
    cap_add:
      - ALL
    # https://github.com/product-os/self-hosted-runners/settings/secrets/actions/COMPOSE_VARS
    # COMPOSE_VARS=$(cat .env | openssl base64 -A)
    env_file:
      # (required) GH_TOKEN with appropriate scope(s)
      # (optional) GEOIP_API_TOKEN (https://ipinfo.io/login)
      - .env
    environment:
      # test at the org. level
      GITHUB_ORG: product-os
      ACTIONS_RUNNER_GROUP: Default
    volumes:
      - persistent-volume:/home/githhub/_work
      - persistent-volume:/var/lib/docker
      - persistent-volume:/scratch
      - persistent-volume:/balena
    entrypoint:
      - /bin/bash
      - "-c"
    command:
      - |
        set -axe

        # skip testing on emulated ARM until this containerd fix is released
        # https://github.com/containerd/containerd/pull/7636
        if ! grep -q "CPU architecture:" /proc/cpuinfo
        then
            case "$(uname -m)" in
                aarch64)
                    echo "Skipping tests on emulated $(uname -m)..."
                    exit 0
                    ;;
                armv7l)
                    echo "Skipping tests on emulated $(uname -m)..."
                    exit 0
                    ;;
                *)
                    ;;
            esac
        fi

        # GITHUB_TOKEN injected by Flowzone
        GH_TOKEN=${GH_TOKEN:-${GITHUB_TOKEN}}

        # background entrypoint
        ./balena.sh &

        # wait for DinD
        while ! docker ps; do
            sleep "$(( ( RANDOM % 3 ) + 3 ))s"
        done

        # wait for runner
        while ! pgrep Runner.Listener; do
            sleep "$(( ( RANDOM % 3 ) + 3 ))s"
        done

        # check runner registration
        while ! test -f .runner; do
            sleep "$(( ( RANDOM % 3 ) + 3 ))s"
        done

        # TBC: is this enough?
        cat .runner | jq -r
